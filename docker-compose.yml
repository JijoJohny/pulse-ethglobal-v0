version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: pulse-08-postgres
    environment:
      POSTGRES_DB: pulse08
      POSTGRES_USER: pulse08
      POSTGRES_PASSWORD: pulse08
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - pulse-08-network

  redis:
    image: redis:7-alpine
    container_name: pulse-08-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pulse-08-network

  # =============================================================================
  # BACKEND SERVICE
  # =============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pulse-08-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://pulse08:pulse08@postgres:5432/pulse08
      - REDIS_URL=redis://redis:6379
      - ROOTSTOCK_RPC_URL=https://public-node.testnet.rsk.co
      - ROOTSTOCK_CHAIN_ID=31
      - THE_GRAPH_SUBGRAPH_URL=https://api.thegraph.com/subgraphs/name/pulse-08/pulse-08-testnet
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - pulse-08-network
    restart: unless-stopped

  # =============================================================================
  # FRONTEND SERVICE
  # =============================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pulse-08-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_GRAPH_URL=https://api.thegraph.com/subgraphs/name/pulse-08/pulse-08-testnet
      - VITE_ROOTSTOCK_RPC_URL=https://public-node.testnet.rsk.co
      - VITE_ROOTSTOCK_CHAIN_ID=31
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - pulse-08-network
    restart: unless-stopped

  # =============================================================================
  # CONTRACT DEVELOPMENT SERVICE
  # =============================================================================
  contracts:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: pulse-08-contracts
    environment:
      - NODE_ENV=development
      - ROOTSTOCK_RPC_URL=https://public-node.testnet.rsk.co
      - ROOTSTOCK_CHAIN_ID=31
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - pulse-08-network
    restart: unless-stopped

  # =============================================================================
  # SUBGRAPH SERVICE
  # =============================================================================
  subgraph:
    build:
      context: ./subgraph
      dockerfile: Dockerfile
    container_name: pulse-08-subgraph
    environment:
      - NODE_ENV=development
      - SUBGRAPH_NAME=pulse-08-testnet
      - SUBGRAPH_VERSION=0.0.1
    volumes:
      - ./subgraph:/app
      - /app/node_modules
    networks:
      - pulse-08-network
    restart: unless-stopped

  # =============================================================================
  # MONITORING SERVICES
  # =============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: pulse-08-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - pulse-08-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: pulse-08-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - pulse-08-network
    restart: unless-stopped

  # =============================================================================
  # DEVELOPMENT TOOLS
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: pulse-08-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - pulse-08-network
    restart: unless-stopped

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  pulse-08-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
